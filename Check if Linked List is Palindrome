import java.util.*;


public class Main {
    public static void main(String[] args) throws Throwable {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        LinkedList llist= new LinkedList(); 
        int a1=sc.nextInt();
        Node head= new Node(a1);
        llist.addToTheLast(head);
        for (int i = 1; i < n; i++) 
        {
            int a = sc.nextInt(); 
            llist.addToTheLast(new Node(a));
        }
            
        Solution A = new Solution();
        A.checkLinkedListPalindrome(llist.head);
        
    }
}

class Node
    {
        int data;
        Node next;
        Node(int d) {data = d; next = null; }
    }
    
class LinkedList
{
    Node head;  
    Node tail;
    public void addToTheLast(Node node) 
    {
      if (head == null) 
      {
       head = node;
       tail = node;
      } 
      else 
      {
       tail.next = node;
       tail = node;
      }
    }
      void printList()
    {
        Node temp = head;
        while (temp != null)
        {
           System.out.print(temp.data+" ");
           temp = temp.next;
        }  
        System.out.println();
    }
    
}

class Solution
{
	static Node copyNode(Node head){
		Node curr = head;
		Node newList = null;
		Node tail = null;

		while(curr!=null){
			if(newList==null){
				newList = new Node(curr.data);
				tail = newList;
			}
			else{
				tail.next = new Node(curr.data);
				tail = tail.next;
				//tail.data = ;
			}
			curr = curr.next;
		}
		return newList;
	}
	
	
	static Node reverse(Node head){
		Node prev = null;
		Node curr = head;
		while(curr!=null){
			Node temp = curr.next;
			curr.next = prev;
			prev = curr;
			curr=temp;
		}
		return prev;
	}
    static void checkLinkedListPalindrome(Node head)
    {
        //Your code here
		Node Dummy = copyNode(head);
		
		Node temp = Dummy;
		Node reversed = reverse(temp);

		Node curr = head;
		/*while(reversed!=null){
			System.out.print(reversed.data+" ");
			reversed = reversed.next;
		}*/
		boolean isPal = true;
		while(curr!=null && reversed != null){
			if(curr.data == reversed.data){
				curr = curr.next;
				reversed = reversed.next;
			}
			else{
				isPal = false;
				break;
			}
		}
		if(isPal){
			System.out.print("YES");
		}else{
			System.out.print("NO");
		}

    }
    
}

/*while(curr!=null){
			System.out.print(curr.data+" ");
			curr = curr.next;
		}*/
		//System.out.println();
		
